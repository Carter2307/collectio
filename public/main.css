/*!*****************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/main.scss ***!
  \*****************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.menu, .preloader, body, html {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
}

.menu, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.detail__description__text, body {
  font-size: 1.6rem;
  line-height: 1.5;
}
@media (max-width: 767px) {
  .detail__description__text, body {
    font-size: 3rem;
  }
}

.menu__links__items__number {
  font-size: 3.2rem;
}

.preloader__number__text {
  font-family: "against";
  font-size: 1.6rem;
}

.detail__description__title, .navigation__link {
  font-family: "against";
  font-size: 2.4rem;
}

.preloader__text {
  font-family: "against";
  font-size: 4.8rem;
}

.detail__content__title, .menu__links__items {
  font-family: "against";
  font-size: 8.8rem;
}
@media (max-width: 375px) {
  .detail__content__title, .menu__links__items {
    font-size: 4.4rem;
  }
}

.home__gallery__title {
  font-family: "against";
  font-size: 12.8rem;
}

@font-face {
  font-family: "against";
  src: url(against-Regular.c14b7651320207e4121d..woff2) format("woff2"), url(against-Regular.1d18cce4156325d29587..woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-Light.df8f06167ee6fd05a131..woff2) format("woff2"), url(Satoshi-Light.67e7fa77f107df3491b6..woff) format("woff");
  font-weight: 300;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-LightItalic.540a6dd2e29f70e15477..woff2) format("woff2"), url(Satoshi-LightItalic.9473bef147f48d191d0d..woff) format("woff");
  font-weight: 300;
  font-display: swap;
  font-style: italic;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-Regular.9ec05085c4cd2966eba8..woff2) format("woff2"), url(Satoshi-Regular.ca3da5fd2b609836ef69..woff) format("woff");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-Italic.f4acf4adbba9bcd2c75c..woff2) format("woff2"), url(Satoshi-Italic.a7000aa1c017eec57868..woff) format("woff");
  font-weight: 400;
  font-display: swap;
  font-style: italic;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-Medium.1ffe968245568e8ba1e7..woff2) format("woff2"), url(Satoshi-Medium.2419b46c96ed15331ba2..woff) format("woff");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-MediumItalic.6be6d51d5fc7402ee45f..woff2) format("woff2"), url(Satoshi-MediumItalic.cb8316e39642de8a12d5..woff) format("woff");
  font-weight: 500;
  font-display: swap;
  font-style: italic;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-Bold.a0e6d25529eab537426c..woff2) format("woff2"), url(Satoshi-Bold.a875ff682ee232938607..woff) format("woff");
  font-weight: 700;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-BoldItalic.99235b175b514139aed0..woff2) format("woff2"), url(Satoshi-BoldItalic.d6da0f2020393863d720..woff) format("woff");
  font-weight: 700;
  font-display: swap;
  font-style: italic;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-Black.b5013d854bb5a8e48651..woff2) format("woff2"), url(Satoshi-Black.4261d202e1e9410db1bf..woff) format("woff");
  font-weight: 900;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Satoshi";
  src: url(Satoshi-BlackItalic.d456cea1fae27f7d4694..woff2) format("woff2"), url(Satoshi-BlackItalic.048e5edd452be6c13214..woff) format("woff");
  font-weight: 900;
  font-display: swap;
  font-style: italic;
}
*,
*::after,
*::before {
  box-sizing: border-box;
  user-select: none;
}

html {
  height: 100vh;
  overflow: hidden;
  font-size: 0.6944444444vw;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3020833333vw;
  }
}
@media (max-width: 374px) {
  html {
    font-size: 2.6666666667vw;
  }
}

body {
  font-family: "Satoshi";
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  border: none;
  background: transparent;
  display: inline-block;
  cursor: pointer;
}

.preloader {
  background-color: #000;
  color: white;
  z-index: 3;
}

.preloader__text {
  max-width: 76rem;
  line-height: 1.5;
  text-align: center;
}
.preloader__text > span {
  overflow: hidden;
}
.preloader__text span {
  display: inline-block;
}

.preloader__number {
  position: fixed;
  bottom: 48px;
  right: 48px;
  overflow: hidden;
}

.preloader__number__text {
  display: inline-block;
}

.menu {
  background-color: #D7CCBF;
  color: white;
  z-index: 1;
  transform-origin: top center;
}

.menu__links {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.8rem;
}

.menu__links__items {
  z-index: 1;
  align-items: baseline;
  display: flex;
  cursor: pointer;
}
.menu__links__items:nth-child(odd) {
  flex-direction: row-reverse;
}
.menu__links__items:nth-child(odd) .menu__links__items__number {
  margin-right: 3rem;
  margin-left: 0;
}

.menu__links__items__link > span {
  display: inline-block;
  overflow: hidden;
}
.menu__links__items__link span {
  display: inline-block;
}

.menu__links__items__number {
  font-family: "Satoshi";
  font-weight: 300;
  margin-left: 3rem;
  display: inline-block;
  overflow: hidden;
}
.menu__links__items__number span {
  display: inline-block;
}

.menu__links__media {
  background-color: #EEEEEE;
  height: 40rem;
  width: 30rem;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
  opacity: 0;
}
@media (max-width: 375px) {
  .menu__links__media {
    display: none;
  }
}

.menu__links__media__image {
  object-fit: cover;
  height: 100%;
  width: 100%;
}

.collumns {
  display: flex;
  padding: 0 10rem;
}
@media (max-width: 375px) {
  .collumns {
    flex-direction: column;
    padding: 0;
  }
}

.collumns__wrapper {
  display: flex;
  flex-direction: column-reverse;
  height: 100vh;
  padding: 2rem;
}
.collumns__wrapper:nth-child(even) {
  flex-direction: column;
}

.collumn {
  display: flex;
  flex-direction: column-reverse;
}

.collumn__item {
  display: inline-block;
  padding: 1.5rem;
  width: 100%;
}
@media (max-width: 375px) {
  .collumn__item {
    padding: 0;
  }
}

.collumn__item__media {
  overflow: hidden;
  display: inline-block;
  object-fit: cover;
  height: auto;
  width: 100%;
}

.collumn__item__media__image {
  display: inline-block;
  border-radius: 12px;
  max-height: 100%;
  max-width: 100%;
  width: 100%;
  object-fit: cover;
}

.navigation {
  position: relative;
  z-index: 2;
}

.navigation__wrapper {
  position: fixed;
  top: 0;
  width: 100%;
  height: 60px;
  padding: 3.2rem 4.8rem;
  display: flex;
  align-items: center;
}

.navigation__button {
  margin-left: auto;
}

.navigation__button__icon {
  height: 2rem;
}

.home {
  padding-top: 60px;
}

.home__gallery {
  position: relative;
}

.home__gallery__title {
  position: fixed;
  left: 50%;
  z-index: 1;
  transform: translateX(-50%) translateY(-50%);
}

.detail {
  height: calc(100vh - 60px);
  margin-top: 60px;
}

.detail__wrapper {
  height: 100%;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  align-content: center;
}
@media (max-width: 767px) {
  .detail__wrapper {
    display: flex;
    flex-direction: column;
  }
}

.datail__button {
  display: flex;
  align-items: center;
  align-self: flex-start;
  margin-left: 4.8rem;
  margin-bottom: 2rem;
}

.detail__button__icon {
  margin-right: 1.3rem;
  height: 6rem;
}

.detail__content {
  display: inline-block;
  position: relative;
}

.detail__content__title {
  position: absolute;
  bottom: 5rem;
  left: -80%;
}

.detail__content__media {
  position: relative;
  z-index: -1;
  width: 40rem;
  height: 70rem;
}
@media (max-width: 767px) {
  .detail__content__media {
    width: 100%;
    height: 60vh;
  }
}

.detail__content__media__image {
  object-fit: cover;
  height: 100%;
  width: 100%;
}

.detail__description {
  max-width: 34.6rem;
  align-self: flex-end;
  margin-bottom: 8rem;
}
@media (max-width: 767px) {
  .detail__description {
    align-self: unset;
    max-width: 100%;
    padding: 4rem;
  }
}

.detail__description__title {
  margin-bottom: 1rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/